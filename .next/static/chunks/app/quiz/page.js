/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/quiz/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fcris%2FProjects_Cris%2FPra%CC%81ctica%2Fgreencoins-web%2Fsrc%2Fcomponents%2Fquiz%2Findex.tsx&server=false!":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fcris%2FProjects_Cris%2FPra%CC%81ctica%2Fgreencoins-web%2Fsrc%2Fcomponents%2Fquiz%2Findex.tsx&server=false! ***!
  \***********************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/quiz/index.tsx */ \"(app-pages-browser)/./src/components/quiz/index.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmNyaXMlMkZQcm9qZWN0c19DcmlzJTJGUHJhJUNDJTgxY3RpY2ElMkZncmVlbmNvaW5zLXdlYiUyRnNyYyUyRmNvbXBvbmVudHMlMkZxdWl6JTJGaW5kZXgudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz80MjI4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2NyaXMvUHJvamVjdHNfQ3Jpcy9QcmHMgWN0aWNhL2dyZWVuY29pbnMtd2ViL3NyYy9jb21wb25lbnRzL3F1aXovaW5kZXgudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fcris%2FProjects_Cris%2FPra%CC%81ctica%2Fgreencoins-web%2Fsrc%2Fcomponents%2Fquiz%2Findex.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/quiz/index.tsx":
/*!***************************************!*\
  !*** ./src/components/quiz/index.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Quiz; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _data_quiz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/data/quiz */ \"(app-pages-browser)/./src/data/quiz.ts\");\n/* harmony import */ var _utils_sumarPuntos__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/sumarPuntos */ \"(app-pages-browser)/./src/utils/sumarPuntos.ts\");\n// \"use client\";\n// import { useState } from \"react\";\n// import { quizSets } from \"@/data/quiz\";\n// import { sumarPuntos } from \"@/utils/sumarPuntos\";\n// export default function Quiz() {\n//   const [setActivo, setSetActivo] = useState<number | null>(null);\n//   const [paso, setPaso] = useState(0);\n//   const [puntos, setPuntos] = useState(0);\n//   const [respondido, setRespondido] = useState(false);\n//   const [seleccion, setSeleccion] = useState<string | null>(null);\n//   const [mostrarConfirmacion, setMostrarConfirmacion] = useState(false);\n//   if (setActivo === null) {\n//     return (\n//       <div className=\"max-w-xl mx-auto p-6 text-center mt-10 mb-10\">\n//         <h1 className=\"text-2xl font-bold text-green-700 mb-4\">\n//           Pon a prueba tus conocimientos...\n//         </h1>\n//         <h2 className=\"text-2xl font-bold text-black mb-4\">\n//           Selecciona un set de preguntas\n//         </h2>\n//         <div className=\"grid gap-4\">\n//           {[1, 2, 3, 4].map((num) => (\n//             <button\n//               key={num}\n//               onClick={() => setSetActivo(num - 1)}\n//               className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n//             >\n//               Set {num}\n//             </button>\n//           ))}\n//         </div>\n//       </div>\n//     );\n//   }\n//   const preguntasSet = quizSets[setActivo];\n//   const preguntaActual = preguntasSet[paso];\n//   const manejarRespuesta = (opcion: string) => {\n//     if (respondido) return;\n//     setSeleccion(opcion);\n//     setRespondido(true);\n//     if (opcion === preguntaActual.respuestaCorrecta) {\n//       setPuntos((prev) => prev + 1);\n//     }\n//   };\n//   const siguiente = () => {\n//     setRespondido(false);\n//     setSeleccion(null);\n//     setPaso((prev) => prev + 1);\n//   };\n//   const volverASeleccion = () => {\n//     setPaso(0);\n//     setPuntos(0);\n//     setSetActivo(null);\n//     setSeleccion(null);\n//     setRespondido(false);\n//     setMostrarConfirmacion(false);\n//   };\n//   if (paso >= preguntasSet.length) {\n//     return (\n//       <div className=\"max-w-xl mx-auto p-6 text-center\">\n//         <h2 className=\"text-2xl font-bold text-green-700 mb-4\">\n//           ¡Quiz terminado!\n//         </h2>\n//         <p className=\"text-xl mb-2\">\n//           Obtuviste {puntos} de {preguntasSet.length} puntos 🎉\n//         </p>\n//         <button\n//           onClick={() => setSetActivo(null)}\n//           className=\"mt-4 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n//         >\n//           Jugar otro Quiz\n//         </button>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div className=\"max-w-xl mx-auto p-6\">\n//       <h2 className=\"text-xl font-bold text-green-700 mb-2\">\n//         Pregunta {paso + 1} de {preguntasSet.length}\n//       </h2>\n//       <p className=\"text-lg font-medium mb-4\">{preguntaActual.pregunta}</p>\n//       <div className=\"space-y-3\">\n//         {preguntaActual.opciones.map((opcion, i) => {\n//           const correcta = opcion === preguntaActual.respuestaCorrecta;\n//           return (\n//             <button\n//               key={i}\n//               onClick={() => manejarRespuesta(opcion)}\n//               className={`w-full text-left border p-3 rounded-lg transition\n//                 ${\n//                   respondido\n//                     ? correcta\n//                       ? \"bg-green-200 border-green-500\"\n//                       : opcion === seleccion\n//                       ? \"bg-red-200 border-red-500\"\n//                       : \"bg-gray-100\"\n//                     : \"hover:bg-green-50\"\n//                 }`}\n//               disabled={respondido}\n//             >\n//               {opcion}\n//             </button>\n//           );\n//         })}\n//       </div>\n//       {respondido && (\n//         <div className=\"mt-4 p-3 bg-blue-50 border-l-4 border-blue-400\">\n//           <p className=\"text-sm text-blue-800\">\n//             💡 {preguntaActual.explicacion}\n//           </p>\n//           <button\n//             onClick={siguiente}\n//             className=\"mt-3 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n//           >\n//             Siguiente\n//           </button>\n//         </div>\n//       )}\n//       <div className=\"mt-6\">\n//         {!mostrarConfirmacion ? (\n//           <button\n//             onClick={() => setMostrarConfirmacion(true)}\n//             className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n//           >\n//             Reiniciar juego\n//           </button>\n//         ) : (\n//           <div className=\"mt-4 text-sm bg-red-50 p-3 rounded border border-red-200 text-red-800\">\n//             <p className=\"mb-2\">¿Seguro que deseas reiniciar el quiz?</p>\n//             <div className=\"flex gap-2 justify-center\">\n//               <button\n//                 onClick={volverASeleccion}\n//                 className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\"\n//               >\n//                 Sí, reiniciar\n//               </button>\n//               <button\n//                 onClick={() => setMostrarConfirmacion(false)}\n//                 className=\"px-3 py-1 border border-gray-400 rounded hover:bg-gray-100\"\n//               >\n//                 Cancelar\n//               </button>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction Quiz() {\n    _s();\n    const [setActivo, setSetActivo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [paso, setPaso] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [puntos, setPuntos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [respondido, setRespondido] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [seleccion, setSeleccion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [mostrarConfirmacion, setMostrarConfirmacion] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [puntosOtorgados, setPuntosOtorgados] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [quizCompletado, setQuizCompletado] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Otorga los puntos una sola vez al completar el quiz\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (quizCompletado && !puntosOtorgados) {\n            (0,_utils_sumarPuntos__WEBPACK_IMPORTED_MODULE_3__.sumarPuntos)(10);\n            alert(\"\\uD83C\\uDF89 \\xa1Completaste el quiz y ganaste 10 GreenCoins!\");\n            setPuntosOtorgados(true);\n        }\n    }, [\n        quizCompletado,\n        puntosOtorgados\n    ]);\n    if (setActivo === null) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-xl mx-auto p-6 text-center mt-10 mb-10\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-2xl font-bold text-green-700 mb-4\",\n                    children: \"Pon a prueba tus conocimientos...\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 193,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-2xl font-bold text-black mb-4\",\n                    children: \"Selecciona un set de preguntas\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 196,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid gap-4\",\n                    children: _data_quiz__WEBPACK_IMPORTED_MODULE_2__.quizSets.map((_, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setSetActivo(i),\n                            className: \"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700\",\n                            children: [\n                                \"Set \",\n                                i + 1\n                            ]\n                        }, i, true, {\n                            fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                            lineNumber: 201,\n                            columnNumber: 13\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 199,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n            lineNumber: 192,\n            columnNumber: 7\n        }, this);\n    }\n    const preguntasSet = _data_quiz__WEBPACK_IMPORTED_MODULE_2__.quizSets[setActivo];\n    const preguntaActual = preguntasSet[paso];\n    const manejarRespuesta = (opcion)=>{\n        if (respondido) return;\n        setSeleccion(opcion);\n        setRespondido(true);\n        if (opcion === preguntaActual.respuestaCorrecta) {\n            setPuntos((prev)=>prev + 1);\n        }\n    };\n    const siguiente = ()=>{\n        setRespondido(false);\n        setSeleccion(null);\n        if (paso + 1 < preguntasSet.length) {\n            setPaso((prev)=>prev + 1);\n        } else {\n            setQuizCompletado(true);\n        }\n    };\n    const volverASeleccion = ()=>{\n        setPaso(0);\n        setPuntos(0);\n        setSetActivo(null);\n        setSeleccion(null);\n        setRespondido(false);\n        setMostrarConfirmacion(false);\n        setQuizCompletado(false);\n        setPuntosOtorgados(false);\n    };\n    if (quizCompletado) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-xl mx-auto p-6 text-center\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-2xl font-bold text-green-700 mb-4\",\n                    children: \"\\xa1Quiz terminado!\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 252,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-xl mb-2\",\n                    children: [\n                        \"Obtuviste \",\n                        puntos,\n                        \" de \",\n                        preguntasSet.length,\n                        \" puntos \\uD83C\\uDF89\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 255,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-green-600 font-semibold mt-2\",\n                    children: \"\\uD83C\\uDF81 \\xa1Ganaste 10 GreenCoins!\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 258,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: volverASeleccion,\n                    className: \"mt-6 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n                    children: \"Jugar otro Quiz\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 261,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n            lineNumber: 251,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"max-w-xl mx-auto p-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-xl font-bold text-green-700 mb-2\",\n                children: [\n                    \"Pregunta \",\n                    paso + 1,\n                    \" de \",\n                    preguntasSet.length\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                lineNumber: 273,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-lg font-medium mb-4\",\n                children: preguntaActual.pregunta\n            }, void 0, false, {\n                fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                lineNumber: 276,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-3\",\n                children: preguntaActual.opciones.map((opcion, i)=>{\n                    const correcta = opcion === preguntaActual.respuestaCorrecta;\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>manejarRespuesta(opcion),\n                        className: \"w-full text-left border p-3 rounded-lg transition \\n                \".concat(respondido ? correcta ? \"bg-green-200 border-green-500\" : opcion === seleccion ? \"bg-red-200 border-red-500\" : \"bg-gray-100\" : \"hover:bg-green-50\"),\n                        disabled: respondido,\n                        children: opcion\n                    }, i, false, {\n                        fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                        lineNumber: 283,\n                        columnNumber: 13\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                lineNumber: 278,\n                columnNumber: 7\n            }, this),\n            respondido && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 p-3 bg-blue-50 border-l-4 border-blue-400\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-blue-800\",\n                        children: [\n                            \"\\uD83D\\uDCA1 \",\n                            preguntaActual.explicacion\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                        lineNumber: 306,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: siguiente,\n                        className: \"mt-3 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",\n                        children: \"Siguiente\"\n                    }, void 0, false, {\n                        fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                        lineNumber: 309,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                lineNumber: 305,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-6\",\n                children: !mostrarConfirmacion ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: ()=>setMostrarConfirmacion(true),\n                    className: \"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n                    children: \"Reiniciar juego\"\n                }, void 0, false, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 320,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-4 text-sm bg-red-50 p-3 rounded border border-red-200 text-red-800\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"mb-2\",\n                            children: \"\\xbfSeguro que deseas reiniciar el quiz?\"\n                        }, void 0, false, {\n                            fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                            lineNumber: 328,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-2 justify-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: volverASeleccion,\n                                    className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700\",\n                                    children: \"S\\xed, reiniciar\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                                    lineNumber: 330,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setMostrarConfirmacion(false),\n                                    className: \"px-3 py-1 border border-gray-400 rounded hover:bg-gray-100\",\n                                    children: \"Cancelar\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                                    lineNumber: 336,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                            lineNumber: 329,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                    lineNumber: 327,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n                lineNumber: 318,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/cris/Projects_Cris/Práctica/greencoins-web/src/components/quiz/index.tsx\",\n        lineNumber: 272,\n        columnNumber: 5\n    }, this);\n}\n_s(Quiz, \"86PP45htEyFaBH/WK3L6KGg1T2Y=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/quiz/index.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/data/quiz.ts":
/*!**************************!*\
  !*** ./src/data/quiz.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   quizSets: function() { return /* binding */ quizSets; }\n/* harmony export */ });\nconst quizSets = [\n    // Set 1: Nivel intermedio\n    [\n        {\n            id: 1,\n            pregunta: \"\\xbfQu\\xe9 significa reducir en las 3R del reciclaje?\",\n            opciones: [\n                \"Usar menos recursos y generar menos residuos\",\n                \"Tirar menos basura\",\n                \"Reutilizar las cosas muchas veces\",\n                \"Separar los residuos correctamente\"\n            ],\n            respuestaCorrecta: \"Usar menos recursos y generar menos residuos\",\n            explicacion: \"Reducir significa consumir menos y evitar residuos innecesarios.\"\n        },\n        {\n            id: 2,\n            pregunta: \"\\xbfQu\\xe9 tipo de residuos va al tacho verde en Per\\xfa?\",\n            opciones: [\n                \"Residuos org\\xe1nicos\",\n                \"Papel\",\n                \"Vidrio\",\n                \"Pl\\xe1stico\"\n            ],\n            respuestaCorrecta: \"Residuos org\\xe1nicos\",\n            explicacion: \"El tacho verde se usa para residuos org\\xe1nicos como restos de comida.\"\n        },\n        {\n            id: 3,\n            pregunta: \"\\xbfCu\\xe1l es el impacto de no reciclar el pl\\xe1stico?\",\n            opciones: [\n                \"Se convierte en arena\",\n                \"Desaparece en pocos d\\xedas\",\n                \"Contamina r\\xedos, mares y afecta a los animales\",\n                \"Se transforma en energ\\xeda limpia\"\n            ],\n            respuestaCorrecta: \"Contamina r\\xedos, mares y afecta a los animales\",\n            explicacion: \"El pl\\xe1stico puede tardar siglos en degradarse y da\\xf1a la fauna marina.\"\n        },\n        {\n            id: 4,\n            pregunta: \"\\xbfQu\\xe9 se puede hacer con botellas pl\\xe1sticas recicladas?\",\n            opciones: [\n                \"Nada\",\n                \"Solo volver a usarlas igual\",\n                \"Ropa, mochilas, y muebles\",\n                \"Ladrillos convencionales\"\n            ],\n            respuestaCorrecta: \"Ropa, mochilas, y muebles\",\n            explicacion: \"Las botellas recicladas se pueden convertir en tejidos sint\\xe9ticos.\"\n        },\n        {\n            id: 5,\n            pregunta: \"\\xbfQu\\xe9 material es m\\xe1s f\\xe1cil de reciclar?\",\n            opciones: [\n                \"Vidrio\",\n                \"Espuma pl\\xe1stica (tecnopor)\",\n                \"Comida cocida\",\n                \"Toallitas h\\xfamedas\"\n            ],\n            respuestaCorrecta: \"Vidrio\",\n            explicacion: \"El vidrio puede reciclarse infinitas veces sin perder calidad.\"\n        },\n        {\n            id: 6,\n            pregunta: \"\\xbfQu\\xe9 hacer antes de reciclar una botella de pl\\xe1stico?\",\n            opciones: [\n                \"Tirarla sin tapa\",\n                \"Aplastarla y taparla\",\n                \"Llenarla de agua\",\n                \"Pintarla\"\n            ],\n            respuestaCorrecta: \"Aplastarla y taparla\",\n            explicacion: \"Esto reduce volumen y evita que se llene de aire nuevamente.\"\n        },\n        {\n            id: 7,\n            pregunta: \"\\xbfPor qu\\xe9 es importante separar los residuos en casa?\",\n            opciones: [\n                \"Para que se vea bonito\",\n                \"Para que el cami\\xf3n se lleve todo junto\",\n                \"Para facilitar el reciclaje y reducir la contaminaci\\xf3n\",\n                \"No es importante realmente\"\n            ],\n            respuestaCorrecta: \"Para facilitar el reciclaje y reducir la contaminaci\\xf3n\",\n            explicacion: \"Separar residuos ayuda al proceso de reciclaje y al cuidado del planeta.\"\n        },\n        {\n            id: 8,\n            pregunta: \"\\xbfQu\\xe9 se puede hacer con el papel reciclado?\",\n            opciones: [\n                \"Nada \\xfatil\",\n                \"Solo bolsas de papel\",\n                \"Nuevas hojas, cart\\xf3n, cajas\",\n                \"Zapatos\"\n            ],\n            respuestaCorrecta: \"Nuevas hojas, cart\\xf3n, cajas\",\n            explicacion: \"El papel reciclado sirve para muchos productos de uso diario.\"\n        },\n        {\n            id: 9,\n            pregunta: \"\\xbfQu\\xe9 objeto **no** debe ir al reciclaje?\",\n            opciones: [\n                \"Botella de vidrio\",\n                \"Caja de cart\\xf3n\",\n                \"Papel con grasa\",\n                \"Lata de aluminio\"\n            ],\n            respuestaCorrecta: \"Papel con grasa\",\n            explicacion: \"El papel manchado con comida o grasa no se puede reciclar.\"\n        },\n        {\n            id: 10,\n            pregunta: \"\\xbfQu\\xe9 se entiende por econom\\xeda circular?\",\n            opciones: [\n                \"Una forma de hacer m\\xe1s dinero\",\n                \"Un sistema para reducir, reutilizar y reciclar continuamente\",\n                \"Un mercado donde se vende reciclaje\",\n                \"Una forma de vender cosas usadas\"\n            ],\n            respuestaCorrecta: \"Un sistema para reducir, reutilizar y reciclar continuamente\",\n            explicacion: \"La econom\\xeda circular busca aprovechar al m\\xe1ximo los recursos.\"\n        }\n    ],\n    // Set 2: Nivel intermedio\n    [\n        {\n            id: 1,\n            pregunta: \"\\xbfQu\\xe9 tipo de energ\\xeda es m\\xe1s limpia y renovable?\",\n            opciones: [\n                \"Carb\\xf3n\",\n                \"Gas natural\",\n                \"E\\xf3lica\",\n                \"Gasolina\"\n            ],\n            respuestaCorrecta: \"E\\xf3lica\",\n            explicacion: \"La energ\\xeda e\\xf3lica usa el viento y no contamina.\"\n        },\n        {\n            id: 2,\n            pregunta: \"\\xbfCu\\xe1l de estos productos **s\\xed** se puede reutilizar muchas veces?\",\n            opciones: [\n                \"Botellas de pl\\xe1stico descartables\",\n                \"Bolsas de tela\",\n                \"Papel higi\\xe9nico\",\n                \"C\\xe1scaras de frutas\"\n            ],\n            respuestaCorrecta: \"Bolsas de tela\",\n            explicacion: \"Las bolsas de tela pueden usarse muchas veces, reduciendo residuos.\"\n        },\n        {\n            id: 3,\n            pregunta: \"\\xbfQu\\xe9 es un punto limpio o centro de acopio?\",\n            opciones: [\n                \"Un tacho especial\",\n                \"Un lugar donde se botan residuos org\\xe1nicos\",\n                \"Un espacio para llevar residuos reciclables separados\",\n                \"Una f\\xe1brica de papel reciclado\"\n            ],\n            respuestaCorrecta: \"Un espacio para llevar residuos reciclables separados\",\n            explicacion: \"Los centros de acopio reciben materiales como papel, cart\\xf3n o pl\\xe1stico.\"\n        },\n        {\n            id: 4,\n            pregunta: \"\\xbfCu\\xe1l es el tiempo de degradaci\\xf3n aproximado de una botella de pl\\xe1stico?\",\n            opciones: [\n                \"2 meses\",\n                \"1 a\\xf1o\",\n                \"50 a\\xf1os\",\n                \"M\\xe1s de 400 a\\xf1os\"\n            ],\n            respuestaCorrecta: \"M\\xe1s de 400 a\\xf1os\",\n            explicacion: \"Una sola botella de pl\\xe1stico puede tardar siglos en desaparecer.\"\n        },\n        {\n            id: 5,\n            pregunta: \"\\xbfQu\\xe9 hacer con las pilas usadas?\",\n            opciones: [\n                \"Botarlas al tacho com\\xfan\",\n                \"Enterrarlas\",\n                \"Llevarlas a un punto especializado\",\n                \"Tirarlas al desag\\xfce\"\n            ],\n            respuestaCorrecta: \"Llevarlas a un punto especializado\",\n            explicacion: \"Las pilas contienen metales t\\xf3xicos que contaminan gravemente.\"\n        },\n        {\n            id: 6,\n            pregunta: \"\\xbfCu\\xe1l es una forma de reducir el consumo de pl\\xe1stico en casa?\",\n            opciones: [\n                \"Usar sorbetes descartables\",\n                \"Comprar frutas envasadas\",\n                \"Llevar envases reutilizables\",\n                \"Comprar botellas cada semana\"\n            ],\n            respuestaCorrecta: \"Llevar envases reutilizables\",\n            explicacion: \"Reutilizar reduce el uso de pl\\xe1sticos de un solo uso.\"\n        },\n        {\n            id: 7,\n            pregunta: \"\\xbfQu\\xe9 material es 100% reciclable infinitamente?\",\n            opciones: [\n                \"Vidrio\",\n                \"Papel\",\n                \"Pl\\xe1stico\",\n                \"Cart\\xf3n\"\n            ],\n            respuestaCorrecta: \"Vidrio\",\n            explicacion: \"El vidrio puede reciclarse sin perder calidad.\"\n        },\n        {\n            id: 8,\n            pregunta: \"\\xbfQu\\xe9 acci\\xf3n ayuda a combatir el cambio clim\\xe1tico?\",\n            opciones: [\n                \"Quemar basura\",\n                \"Plantar \\xe1rboles\",\n                \"Tirar aceite en el desag\\xfce\",\n                \"Dejar luces prendidas todo el d\\xeda\"\n            ],\n            respuestaCorrecta: \"Plantar \\xe1rboles\",\n            explicacion: \"Los \\xe1rboles absorben CO₂ y ayudan a regular el clima.\"\n        },\n        {\n            id: 9,\n            pregunta: \"\\xbfCu\\xe1l de estos residuos electr\\xf3nicos debe reciclarse?\",\n            opciones: [\n                \"Cepillo de dientes\",\n                \"Celular antiguo\",\n                \"Tenedor de acero\",\n                \"Vaso roto\"\n            ],\n            respuestaCorrecta: \"Celular antiguo\",\n            explicacion: \"Los celulares contienen materiales t\\xf3xicos que deben reciclarse adecuadamente.\"\n        },\n        {\n            id: 10,\n            pregunta: \"\\xbfQu\\xe9 es compostar?\",\n            opciones: [\n                \"Quemar residuos\",\n                \"Hacer abono con residuos org\\xe1nicos\",\n                \"Mezclar todos los residuos\",\n                \"Tirar restos de comida al tacho com\\xfan\"\n            ],\n            respuestaCorrecta: \"Hacer abono con residuos org\\xe1nicos\",\n            explicacion: \"Compostar convierte residuos como c\\xe1scaras o restos de frutas en abono.\"\n        }\n    ],\n    // Set 3 - Nivel Alto\n    [\n        {\n            id: 1,\n            pregunta: \"\\xbfCu\\xe1l es el principal gas de efecto invernadero emitido por los residuos org\\xe1nicos en vertederos?\",\n            opciones: [\n                \"Di\\xf3xido de carbono\",\n                \"Metano\",\n                \"\\xd3xidos de nitr\\xf3geno\",\n                \"Ozono\"\n            ],\n            respuestaCorrecta: \"Metano\",\n            explicacion: \"El metano es un gas de efecto invernadero muy potente liberado cuando la materia org\\xe1nica se descompone sin ox\\xedgeno.\"\n        },\n        {\n            id: 2,\n            pregunta: \"\\xbfQu\\xe9 significa la econom\\xeda circular?\",\n            opciones: [\n                \"Usar recursos una sola vez\",\n                \"Comprar productos reciclados\",\n                \"Reducir, reutilizar y reciclar\",\n                \"Dise\\xf1ar productos para su reutilizaci\\xf3n continua\"\n            ],\n            respuestaCorrecta: \"Dise\\xf1ar productos para su reutilizaci\\xf3n continua\",\n            explicacion: \"La econom\\xeda circular busca eliminar el concepto de 'residuo' manteniendo los recursos en uso el mayor tiempo posible.\"\n        },\n        {\n            id: 3,\n            pregunta: \"\\xbfQu\\xe9 tipo de pl\\xe1stico es m\\xe1s dif\\xedcil de reciclar?\",\n            opciones: [\n                \"PET (botellas)\",\n                \"HDPE (envases de detergente)\",\n                \"PVC (tuber\\xedas)\",\n                \"PP (tapas)\"\n            ],\n            respuestaCorrecta: \"PVC (tuber\\xedas)\",\n            explicacion: \"El PVC es dif\\xedcil de reciclar porque libera compuestos t\\xf3xicos al fundirse.\"\n        },\n        {\n            id: 4,\n            pregunta: \"\\xbfQu\\xe9 componente electr\\xf3nico puede contener metales como oro o plata?\",\n            opciones: [\n                \"Cables USB\",\n                \"Teclados\",\n                \"Chips de computadoras\",\n                \"Pantallas LED\"\n            ],\n            respuestaCorrecta: \"Chips de computadoras\",\n            explicacion: \"Los chips contienen metales preciosos que pueden recuperarse mediante reciclaje especializado.\"\n        },\n        {\n            id: 5,\n            pregunta: \"\\xbfQu\\xe9 sucede si se mezcla vidrio con cer\\xe1mica al reciclar?\",\n            opciones: [\n                \"Se mejora la calidad del vidrio reciclado\",\n                \"Se rompe la maquinaria\",\n                \"Se contamina el lote de vidrio\",\n                \"No pasa nada, se funde igual\"\n            ],\n            respuestaCorrecta: \"Se contamina el lote de vidrio\",\n            explicacion: \"La cer\\xe1mica no se funde a la misma temperatura que el vidrio y puede arruinar todo el lote reciclado.\"\n        },\n        {\n            id: 6,\n            pregunta: \"\\xbfQu\\xe9 pa\\xeds es conocido por reciclar m\\xe1s del 90% de sus botellas pl\\xe1sticas?\",\n            opciones: [\n                \"Estados Unidos\",\n                \"India\",\n                \"Noruega\",\n                \"Brasil\"\n            ],\n            respuestaCorrecta: \"Noruega\",\n            explicacion: \"Noruega lidera el reciclaje gracias a un sistema de dep\\xf3sito inteligente para botellas.\"\n        },\n        {\n            id: 7,\n            pregunta: \"\\xbfQu\\xe9 es el compostaje?\",\n            opciones: [\n                \"Quemar residuos para obtener energ\\xeda\",\n                \"Transformar residuos org\\xe1nicos en abono\",\n                \"Compactar basura para ahorrar espacio\",\n                \"Congelar alimentos para conservarlos\"\n            ],\n            respuestaCorrecta: \"Transformar residuos org\\xe1nicos en abono\",\n            explicacion: \"El compostaje convierte restos org\\xe1nicos como c\\xe1scaras o vegetales en fertilizante natural.\"\n        },\n        {\n            id: 8,\n            pregunta: \"\\xbfQu\\xe9 envase es m\\xe1s dif\\xedcil de reciclar?\",\n            opciones: [\n                \"Tetra Pak\",\n                \"Lata de aluminio\",\n                \"Botella PET\",\n                \"Botella de vidrio\"\n            ],\n            respuestaCorrecta: \"Tetra Pak\",\n            explicacion: \"Los envases Tetra Pak est\\xe1n compuestos por capas de cart\\xf3n, pl\\xe1stico y aluminio, lo que complica su reciclaje.\"\n        },\n        {\n            id: 9,\n            pregunta: \"\\xbfQu\\xe9 t\\xe9cnica de reciclaje se considera la m\\xe1s ecol\\xf3gica?\",\n            opciones: [\n                \"Incineraci\\xf3n con captura de carbono\",\n                \"Reciclaje mec\\xe1nico de pl\\xe1sticos\",\n                \"Reutilizaci\\xf3n directa sin transformaci\\xf3n\",\n                \"Reciclaje qu\\xedmico\"\n            ],\n            respuestaCorrecta: \"Reutilizaci\\xf3n directa sin transformaci\\xf3n\",\n            explicacion: \"Reutilizar un objeto sin transformarlo ahorra m\\xe1s energ\\xeda y recursos que cualquier otro m\\xe9todo.\"\n        },\n        {\n            id: 10,\n            pregunta: \"\\xbfQu\\xe9 es un punto limpio?\",\n            opciones: [\n                \"Un lugar donde no hay basura\",\n                \"Un sitio para arrojar residuos peligrosos\",\n                \"Un centro especializado para reciclar m\\xfaltiples materiales\",\n                \"Una campa\\xf1a escolar para recoger residuos\"\n            ],\n            respuestaCorrecta: \"Un centro especializado para reciclar m\\xfaltiples materiales\",\n            explicacion: \"Los puntos limpios permiten entregar residuos como electr\\xf3nicos, aceites, pilas y m\\xe1s, de forma segura.\"\n        }\n    ],\n    // Set 4 - Nivel Alto\n    [\n        {\n            id: 1,\n            pregunta: \"\\xbfCu\\xe1l es la principal causa de que muchos residuos reciclables no se reciclen?\",\n            opciones: [\n                \"Falta de camiones recolectores\",\n                \"Contaminaci\\xf3n de los residuos con comida o l\\xedquidos\",\n                \"Falta de tachos de colores\",\n                \"Costos elevados de transporte\"\n            ],\n            respuestaCorrecta: \"Contaminaci\\xf3n de los residuos con comida o l\\xedquidos\",\n            explicacion: \"Cuando los materiales reciclables est\\xe1n sucios o mojados, no pueden ser procesados y terminan en el relleno sanitario.\"\n        },\n        {\n            id: 2,\n            pregunta: \"\\xbfQu\\xe9 metal se recicla infinitamente sin perder calidad?\",\n            opciones: [\n                \"Hierro\",\n                \"Cobre\",\n                \"Aluminio\",\n                \"Oro\"\n            ],\n            respuestaCorrecta: \"Aluminio\",\n            explicacion: \"El aluminio se puede reciclar una y otra vez sin perder propiedades, como en el caso de las latas.\"\n        },\n        {\n            id: 3,\n            pregunta: \"\\xbfQu\\xe9 acci\\xf3n reduce m\\xe1s la huella de carbono en casa?\",\n            opciones: [\n                \"Separar residuos\",\n                \"Apagar luces\",\n                \"Evitar comprar productos con envases pl\\xe1sticos\",\n                \"Usar bicicleta en lugar de auto\"\n            ],\n            respuestaCorrecta: \"Usar bicicleta en lugar de auto\",\n            explicacion: \"El transporte es una de las principales fuentes de CO₂. Usar bicicleta reduce dr\\xe1sticamente esa huella.\"\n        },\n        {\n            id: 4,\n            pregunta: \"\\xbfQu\\xe9 tipo de residuos deben llevarse a un centro de acopio especial?\",\n            opciones: [\n                \"Residuos org\\xe1nicos\",\n                \"Botellas PET\",\n                \"Pilas usadas\",\n                \"Envases de cart\\xf3n\"\n            ],\n            respuestaCorrecta: \"Pilas usadas\",\n            explicacion: \"Las pilas contienen qu\\xedmicos peligrosos que pueden filtrar metales t\\xf3xicos si se desechan mal.\"\n        },\n        {\n            id: 5,\n            pregunta: \"\\xbfQu\\xe9 significa la etiqueta '♻️ 1 PET' en un envase?\",\n            opciones: [\n                \"Producto reutilizable\",\n                \"Pl\\xe1stico no reciclable\",\n                \"Pl\\xe1stico tipo 1, reciclable y com\\xfan en botellas\",\n                \"Fabricado con material compostable\"\n            ],\n            respuestaCorrecta: \"Pl\\xe1stico tipo 1, reciclable y com\\xfan en botellas\",\n            explicacion: \"PET es uno de los pl\\xe1sticos m\\xe1s reciclables y utilizados para bebidas.\"\n        },\n        {\n            id: 6,\n            pregunta: \"\\xbfQu\\xe9 tipo de bolsa es menos contaminante si se reutiliza muchas veces?\",\n            opciones: [\n                \"Bolsa de papel\",\n                \"Bolsa biodegradable\",\n                \"Bolsa de tela\",\n                \"Bolsa de pl\\xe1stico grueso\"\n            ],\n            respuestaCorrecta: \"Bolsa de tela\",\n            explicacion: \"Las bolsas de tela duran a\\xf1os y reducen el uso de pl\\xe1sticos si se reutilizan constantemente.\"\n        },\n        {\n            id: 7,\n            pregunta: \"\\xbfQu\\xe9 es la basura marina?\",\n            opciones: [\n                \"Basura que se quema en la costa\",\n                \"Residuos pl\\xe1sticos y otros materiales acumulados en el mar\",\n                \"Desechos de los pescadores\",\n                \"Pl\\xe1sticos flotantes con etiquetas\"\n            ],\n            respuestaCorrecta: \"Residuos pl\\xe1sticos y otros materiales acumulados en el mar\",\n            explicacion: \"La basura marina afecta la vida marina y proviene muchas veces de las ciudades arrastrada por r\\xedos.\"\n        },\n        {\n            id: 8,\n            pregunta: \"\\xbfCu\\xe1l de estos aparatos electr\\xf3nicos es m\\xe1s com\\xfan en el reciclaje tecnol\\xf3gico?\",\n            opciones: [\n                \"Lavadoras\",\n                \"Celulares\",\n                \"Televisores\",\n                \"Microondas\"\n            ],\n            respuestaCorrecta: \"Celulares\",\n            explicacion: \"Los celulares tienen metales valiosos y se renuevan muy seguido, por eso son comunes en reciclaje tecnol\\xf3gico.\"\n        },\n        {\n            id: 9,\n            pregunta: \"\\xbfQu\\xe9 componente de una computadora es m\\xe1s valioso para reciclar?\",\n            opciones: [\n                \"Carcasa\",\n                \"Pantalla\",\n                \"Procesador (CPU)\",\n                \"Teclado\"\n            ],\n            respuestaCorrecta: \"Procesador (CPU)\",\n            explicacion: \"La CPU contiene materiales valiosos como oro, paladio y otros metales que pueden recuperarse.\"\n        },\n        {\n            id: 10,\n            pregunta: \"\\xbfQu\\xe9 pa\\xeds tiene uno de los mayores niveles de generaci\\xf3n de basura electr\\xf3nica per c\\xe1pita?\",\n            opciones: [\n                \"China\",\n                \"Estados Unidos\",\n                \"India\",\n                \"Noruega\"\n            ],\n            respuestaCorrecta: \"Noruega\",\n            explicacion: \"Aunque recicla mucho, Noruega tambi\\xe9n genera gran cantidad de basura electr\\xf3nica por persona debido a su consumo.\"\n        }\n    ]\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/quiz.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/sumarPuntos.ts":
/*!**********************************!*\
  !*** ./src/utils/sumarPuntos.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sumarPuntos: function() { return /* binding */ sumarPuntos; }\n/* harmony export */ });\nfunction sumarPuntos(nuevosPuntos) {\n    const actuales = parseInt(localStorage.getItem(\"greenCoins\") || \"0\");\n    const nuevos = actuales + nuevosPuntos;\n    localStorage.setItem(\"greenCoins\", nuevos.toString());\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9zdW1hclB1bnRvcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsWUFBWUMsWUFBb0I7SUFDOUMsTUFBTUMsV0FBV0MsU0FBU0MsYUFBYUMsT0FBTyxDQUFDLGlCQUFpQjtJQUNoRSxNQUFNQyxTQUFTSixXQUFXRDtJQUMxQkcsYUFBYUcsT0FBTyxDQUFDLGNBQWNELE9BQU9FLFFBQVE7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL3N1bWFyUHVudG9zLnRzPzQ5ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHN1bWFyUHVudG9zKG51ZXZvc1B1bnRvczogbnVtYmVyKSB7XG4gIGNvbnN0IGFjdHVhbGVzID0gcGFyc2VJbnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJncmVlbkNvaW5zXCIpIHx8IFwiMFwiKTtcbiAgY29uc3QgbnVldm9zID0gYWN0dWFsZXMgKyBudWV2b3NQdW50b3M7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiZ3JlZW5Db2luc1wiLCBudWV2b3MudG9TdHJpbmcoKSk7XG59XG4iXSwibmFtZXMiOlsic3VtYXJQdW50b3MiLCJudWV2b3NQdW50b3MiLCJhY3R1YWxlcyIsInBhcnNlSW50IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm51ZXZvcyIsInNldEl0ZW0iLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/sumarPuntos.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV = jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MjA4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fcris%2FProjects_Cris%2FPra%CC%81ctica%2Fgreencoins-web%2Fsrc%2Fcomponents%2Fquiz%2Findex.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);